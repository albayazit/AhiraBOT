# –ø–∞—Ä—Å–∏–º –≤—Ä–µ–º—è –Ω–∞–º–∞–∑–∞ –¥–ª—è –¢–∞—Ç–∞—Ä—Å—Ç–∞–Ω–∞ —Å exel
from datetime import datetime, timedelta
import calendar
import pandas as pd
import datetime

from parcer import parcer_hidjra

cl = calendar.Calendar()
tat_table = pd.read_excel('data/namaz/namaz_time_tatarstan.xlsx')
tat_table['day'] = tat_table['day'].dt.strftime('%Y.%m.%d') # –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º 'day' –≤ —Å—Ç—Ä–æ–∫—É
current_date = datetime.date.today() # –ø–æ–ª—É—á–∞–µ–º —Å–µ–≥–æ–¥–Ω—è—à–Ω—é—é –¥–∞—Ç—É
nextday_date = current_date + datetime.timedelta(days=1)
cities_exel = tat_table['city'].unique()

def get_day_time(current_city):
    time_day = tat_table[(tat_table['city'] == current_city) & (tat_table['day'] == current_date.strftime('%Y.%m.%d'))]
    isha_time_th = current_date.strftime('%d.%m.%Y') + ' ' + time_day["isha"].to_string()[-8:]
    fajr_time_th = nextday_date.strftime('%d.%m.%Y') + ' ' + time_day["fajr"].to_string()[-8:]

    isha_time_dt = datetime.datetime.strptime(isha_time_th, '%d.%m.%Y %H:%M:%S')
    fajr_time_dt = datetime.datetime.strptime(fajr_time_th, '%d.%m.%Y %H:%M:%S')

    difference = (isha_time_dt - fajr_time_dt).total_seconds()
    current_sec = fajr_time_dt - timedelta(seconds=difference/-3)
    tahadjud_time = datetime.datetime.strftime(current_sec, '%H:%M')

    daytime_message = (
        f'üåç –ì–æ—Ä–æ–¥: <b>{current_city}</b>\n\n'
        f'üìÖ –î–∞—Ç–∞: <b>{current_date.strftime("%d.%m.%Y")} | {parcer_hidjra.main()}</b>\n\n'
        'üî≠ –ú–µ—Ç–æ–¥ —Ä–∞—Å—á–µ—Ç–∞: <b>–î–£–ú –†–¢</b>\n\n'
        f'–§–∞–¥–∂—Ä - <b>{time_day["fajr"].to_string()[-8:-3]}</b>\n'
        f'–§–∞–¥–∂—Ä –≤ –º–µ—á–µ—Ç–∏ - <b>{time_day["fajr_mosque"].to_string()[-8:-3]}</b>\n'
        f'–ó—É—Ö—Ä - <b>{time_day["zuhr"].to_string()[-8:-3]}</b>\n'
        f'–ê—Å—Ä - <b>{time_day["asr"].to_string()[-8:-3]}</b>\n'
        f'–ú–∞–≥—Ä–∏–± - <b>{time_day["magrib"].to_string()[-8:-3]}</b>\n'
        f'–ò—à–∞ - <b>{time_day["isha"].to_string()[-8:-3]}</b>\n\n'
        
        f'–†–∞—Å—Å–≤–µ—Ç: <b>{time_day["sunrise"].to_string()[-8:-3]}</b>\n'
        f'–ó–µ–Ω–∏—Ç: <b>{time_day["zaval"].to_string()[-8:-3]}</b>\n'
        f'–ü–æ—Å–ª–µ–¥–Ω—è—è 1/3 –Ω–æ—á–∏: <b>{tahadjud_time}</b>'
    )
    return daytime_message

def get_nextday_time(current_city):
    time_day = tat_table[(tat_table['city'] == current_city) & (tat_table['day'] == nextday_date.strftime('%Y.%m.%d'))]
    isha_time_th = current_date.strftime('%d.%m.%Y') + ' ' + time_day["isha"].to_string()[-8:]
    fajr_time_th = nextday_date.strftime('%d.%m.%Y') + ' ' + time_day["fajr"].to_string()[-8:]

    isha_time_dt = datetime.datetime.strptime(isha_time_th, '%d.%m.%Y %H:%M:%S')
    fajr_time_dt = datetime.datetime.strptime(fajr_time_th, '%d.%m.%Y %H:%M:%S')

    difference = (isha_time_dt - fajr_time_dt).total_seconds()
    current_sec = fajr_time_dt - timedelta(seconds=difference/-3)
    tahadjud_time = datetime.datetime.strftime(current_sec, '%H:%M')
    nextday_time_message = (
        f'üåç –ì–æ—Ä–æ–¥: <b>{current_city}</b>\n\n'
        f'üìÖ –î–∞—Ç–∞: <b>{nextday_date.strftime("%d.%m.%Y")}</b>\n\n'
        'üî≠ –ú–µ—Ç–æ–¥ —Ä–∞—Å—á–µ—Ç–∞: –î–£–ú –†–¢\n\n'
        f'–§–∞–¥–∂—Ä - <b>{time_day["fajr"].to_string()[-8:-3]}</b>\n'
        f'–§–∞–¥–∂—Ä –≤ –º–µ—á–µ—Ç–∏ - <b>{time_day["fajr_mosque"].to_string()[-8:-3]}</b>\n'
        f'–ó—É—Ö—Ä - <b>{time_day["zuhr"].to_string()[-8:-3]}</b>\n'
        f'–ê—Å—Ä - <b>{time_day["asr"].to_string()[-8:-3]}</b>\n'
        f'–ú–∞–≥—Ä–∏–± - <b>{time_day["magrib"].to_string()[-8:-3]}</b>\n'
        f'–ò—à–∞ - <b>{time_day["isha"].to_string()[-8:-3]}</b>\n\n'

        f'–†–∞—Å—Å–≤–µ—Ç: <b>{time_day["sunrise"].to_string()[-8:-3]}</b>\n'
        f'–ó–µ–Ω–∏—Ç: <b>{time_day["zaval"].to_string()[-8:-3]}</b>\n'
        f'–ü–æ—Å–ª–µ–¥–Ω—è—è 1/3 –Ω–æ—á–∏: <b>{tahadjud_time}</b>'
    )
    return nextday_time_message
